'Obfuscation Notes:'



~~ Query to find a random username that is not a specific username ~~
SELECT vcUsername
FROM messages M 
  JOIN (
      SELECT FLOOR(MAX((pk_messageid)-1)*RAND()) AS ID
      FROM messages ) AS X
  ON M.pk_messageID >= X.ID
WHERE (vcMsgType='publicMsg' OR vcMsgType='actionMsg')
  AND NOT vcUsername='Paul_Hive13'
LIMIT 1;

Analysis: Pro: Excellent performance, under 0.04s a query
		  Con: Only returns one result.

SELECT vcUsername 
FROM messages 
WHERE vcUsername != 'Paul_hive13' 
	AND vcUsername != 'Hive13Bot' 
	AND vcUsername != 'Phergie' 
ORDER BY RAND() LIMIT 544;

Analysis: Pro: Can return a list of any number of random results.
		  Con: Execution time of any query is ~0.74s
		  - If we need more than 18 results, this query is more efficient.



~~ Query to find all message id's where the user posted ~~
SELECT pk_MessageID
FROM messages
WHERE vcUsername='Paul_Hive13';

The above will get all messages where we need to update vcUsername.
http://www.karlrixon.co.uk/articles/sql/update-multiple-rows-with-different-values-and-a-single-sql-query/

~~ Query to update all of the usernames for the above to be random ~~
UPDATE messages
  SET vcUsername = CASE pk_MessageID
    WHEN 1 THEN (Find a random)
    WHEN 2 THEN (Find a random)
    ...
  END
WHERE pk_MessageID in (1, 2, .....);

~~ Query to find all messages that mention a name ~~
SELECT pk_messageID, vcMessage
FROM messages 
WHERE MATCH(vcMessage) 
      AGAINST ('.+pvince*' IN BOOLEAN MODE);

// Perform filter on all messages;

UPATE messages
  SET vcMessage = CASE pk_MessageID
    WHEN 1 THEN (Msg for one)
    WHEN 2 THEN (Msg for two)
    ...
  END
WHER pk_MessageID in (1, 2, ...);
